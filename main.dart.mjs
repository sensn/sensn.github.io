  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1796: v => stringToDartString(v.toString()),
_1797: (d, digits) => stringToDartString(d.toFixed(digits)),
_1800: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1695: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1696: s => console.log(stringFromDartString(s)),
_1724: o => o === undefined,
_1725: o => typeof o === 'boolean',
_1726: o => typeof o === 'number',
_1728: o => typeof o === 'string',
_1731: o => o instanceof Int8Array,
_1732: o => o instanceof Uint8Array,
_1733: o => o instanceof Uint8ClampedArray,
_1734: o => o instanceof Int16Array,
_1735: o => o instanceof Uint16Array,
_1736: o => o instanceof Int32Array,
_1737: o => o instanceof Uint32Array,
_1738: o => o instanceof Float32Array,
_1739: o => o instanceof Float64Array,
_1740: o => o instanceof ArrayBuffer,
_1741: o => o instanceof DataView,
_1742: o => o instanceof Array,
_1743: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1745: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1746: o => o instanceof RegExp,
_1747: (l, r) => l === r,
_1748: o => o,
_1749: o => o,
_1750: o => o,
_1751: b => !!b,
_1752: o => o.length,
_1755: (o, i) => o[i],
_1756: f => f.dartFunction,
_1757: l => arrayFromDartList(Int8Array, l),
_1758: l => arrayFromDartList(Uint8Array, l),
_1759: l => arrayFromDartList(Uint8ClampedArray, l),
_1760: l => arrayFromDartList(Int16Array, l),
_1761: l => arrayFromDartList(Uint16Array, l),
_1762: l => arrayFromDartList(Int32Array, l),
_1763: l => arrayFromDartList(Uint32Array, l),
_1764: l => arrayFromDartList(Float32Array, l),
_1765: l => arrayFromDartList(Float64Array, l),
_1766: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1767: l => arrayFromDartList(Array, l),
_1768: stringFromDartString,
_1769: stringToDartString,
_1770: () => ({}),
_1771: () => [],
_1772: () => globalThis,
_1773: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1774: (o, p) => p in o,
_1775: (o, p) => o[p],
_1776: (o, p, v) => o[p] = v,
_1777: (o, m, a) => o[m].apply(o, a),
_1780: (p, s, f) => p.then(s, f),
_1782: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1711: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1712: (x0,x1) => x0.exec(x1),
_1713: (x0,x1) => x0.test(x1),
_1714: (x0,x1) => x0.exec(x1),
_1715: (x0,x1) => x0.exec(x1),
_1716: x0 => x0.pop(),
_1719: (x0,x1) => x0[x1],
_1720: (x0,x1,x2) => x0[x1] = x2,
_1779: o => String(o),
_1784: x0 => x0.index,
_1786: x0 => x0.length,
_1788: (x0,x1) => x0.exec(x1),
_1790: x0 => x0.flags,
_1791: x0 => x0.multiline,
_1792: x0 => x0.ignoreCase,
_1793: x0 => x0.unicode,
_1794: x0 => x0.dotAll,
_1795: (x0,x1) => x0.lastIndex = x1,
_1582: x0 => new Array(x0),
_1583: (a, i) => a.push(i),
_1587: a => a.pop(),
_1588: (a, i) => a.splice(i, 1),
_1591: (a, s, e) => a.slice(s, e),
_1594: a => a.length,
_1596: (a, i) => a[i],
_1597: (a, i, v) => a[i] = v,
_1599: (s, i) => s.charCodeAt(i),
_1600: (a, b) => a + b,
_1601: (o, a, b) => o.replace(a, b),
_1603: (s, t) => s.split(t),
_1604: (o, s, i) => o.substring(s, i),
_1605: s => s.toLowerCase(),
_1606: s => s.toUpperCase(),
_1607: s => s.trim(),
_1608: s => s.trimLeft(),
_1609: s => s.trimRight(),
_1611: (s, p, i) => s.indexOf(p, i),
_1612: (s, p, i) => s.lastIndexOf(p, i),
_1613: s => s.length,
_1614: (s, i) => s[i],
_1616: o => o.buffer,
_1617: o => o.byteLength,
_1618: o => o.byteOffset,
_1619: o => o.BYTES_PER_ELEMENT,
_1620: o => o.length,
_1621: (b, o) => new DataView(b, o),
_1622: (b, o, l) => new DataView(b, o, l),
_1624: (b, o, e) => b.getFloat64(o, e),
_1626: (b, o, e) => b.getInt32(o, e),
_1627: (b, o, e) => b.getBigInt64(o, e),
_1629: (b, o, e) => b.getUint16(o, e),
_1630: (b, o, e) => b.getUint32(o, e),
_1632: (b, o) => b.getUint8(o),
_1643: (o, i) => o[i],
_1644: (o, i, v) => o[i] = v,
_1645: (b, o) => new Uint8Array(b, o),
_1646: (b, o, l) => new Uint8Array(b, o, l),
_1647: (a, s, p) => new Uint8Array(a.subarray(s, p)),
_1650: (a, s, p) => new Int8Array(a.subarray(s, p)),
_1653: (a, s, p) => new Uint8ClampedArray(a.subarray(s, p)),
_1655: (a, s, p) => new Uint16Array(a.subarray(s, p)),
_1657: (a, s, p) => new Int16Array(a.subarray(s, p)),
_1659: (a, s, p) => new Uint32Array(a.subarray(s, p)),
_1660: (b, o, l) => new Int32Array(b, o, l),
_1661: (a, s, p) => new Int32Array(a.subarray(s, p)),
_1662: (o, i) => o[i],
_1663: (o, i, v) => o[i] = v,
_1666: (b, o, l) => new BigInt64Array(b, o, l),
_1667: (a, s, p) => new BigInt64Array(a.subarray(s, p)),
_1668: (o, i) => o[i],
_1669: (o, i, v) => o[i] = v,
_1670: (b, o, l) => new Float32Array(b, o, l),
_1671: (a, s, p) => new Float32Array(a.subarray(s, p)),
_1672: (b, o, l) => new Float64Array(b, o, l),
_1673: (a, s, p) => new Float64Array(a.subarray(s, p)),
_1674: (s, k, e) => s.subarray(k, e),
_1675: (t, s, i) => t.set(s, i),
_1708: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1709: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1702: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1703: (handle) => clearTimeout(handle),
_1704: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1705: (handle) => clearInterval(handle),
_1707: () => Date.now(),
_1706: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1697: (o, t) => o instanceof t,
_1699: f => finalizeWrapper(f,x0 => dartInstance.exports._1699(f,x0)),
_1700: f => finalizeWrapper(f,x0 => dartInstance.exports._1700(f,x0)),
_1701: o => Object.keys(o),
_1682: Date.now,
_1684: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1685: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1686: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1687: () => typeof dartUseDateNowForTicks !== "undefined",
_1688: () => 1000 * performance.now(),
_1689: () => Date.now(),
_1690: () => {
      // On browsers return `globalThis.location.href`
      if (globalThis.location != null) {
        return stringToDartString(globalThis.location.href);
      }
      return null;
    },
_1691: () => {
        return typeof process != undefined &&
               Object.prototype.toString.call(process) == "[object process]" &&
               process.platform == "win32"
      },
_1692: () => new WeakMap(),
_1693: (map, o) => map.get(o),
_1694: (map, o, v) => map.set(o, v),
_1: f => finalizeWrapper(f,() => dartInstance.exports._1(f)),
_2: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._2(f,arguments.length,x0) }),
_3: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_4: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._4(f,x0,x1)),
_5: x0 => new Promise(x0),
_6: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._6(f,arguments.length,x0) }),
_7: x0 => ({runApp: x0}),
_8: () => ({}),
_9: (x0,x1) => x0.append(x1),
_10: x0 => x0.save(),
_11: x0 => x0.remove(),
_12: x0 => x0.restore(),
_13: x0 => x0.save(),
_14: x0 => x0.save(),
_15: x0 => x0.restore(),
_16: x0 => x0.beginPath(),
_18: x0 => x0.beginPath(),
_19: x0 => x0.beginPath(),
_20: x0 => x0.stroke(),
_26: x0 => x0.beginPath(),
_27: x0 => x0.closePath(),
_28: x0 => x0.beginPath(),
_29: x0 => x0.beginPath(),
_30: x0 => x0.closePath(),
_31: x0 => x0.beginPath(),
_32: x0 => x0.beginPath(),
_33: x0 => x0.save(),
_34: x0 => x0.restore(),
_35: x0 => x0.remove(),
_38: x0 => x0.stroke(),
_39: x0 => x0.stroke(),
_40: (x0,x1) => x0.drawPaint(x1),
_41: (x0,x1,x2) => x0.drawPath(x1,x2),
_42: (x0,x1) => x0.drawPicture(x1),
_44: x0 => x0.restore(),
_45: x0 => ({locateFile: x0}),
_46: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_47: () => new window.flutterCanvasKit.Paint(),
_50: () => new window.flutterCanvasKit.Path(),
_54: () => new window.flutterCanvasKit.PictureRecorder(),
_55: () => ({}),
_56: () => ({}),
_58: () => ({}),
_61: () => ({}),
_62: x0 => new window.flutterCanvasKit.Font(x0),
_63: (x0,x1) => ({ambient: x0,spot: x1}),
_77: x0 => x0.remove(),
_85: (x0,x1,x2) => x0.insertBefore(x1,x2),
_87: (x0,x1) => x0.append(x1),
_88: (x0,x1) => x0.append(x1),
_91: (x0,x1) => x0.append(x1),
_95: x0 => x0.delete(),
_96: x0 => x0.delete(),
_97: x0 => x0.Make(),
_98: x0 => x0.Make(),
_99: x0 => x0.enableFontFallback(),
_100: (x0,x1) => x0.setDefaultFontManager(x1),
_105: x0 => x0.delete(),
_106: (x0,x1) => x0.setBlendMode(x1),
_107: (x0,x1) => x0.setStyle(x1),
_111: (x0,x1) => x0.setShader(x1),
_116: (x0,x1) => x0.setFillType(x1),
_119: (x0,x1) => x0.setFillType(x1),
_120: (x0,x1) => x0.setFillType(x1),
_122: x0 => x0.close(),
_124: x0 => x0.copy(),
_129: x0 => x0.finishRecordingAsPicture(),
_130: x0 => x0.delete(),
_131: (x0,x1) => x0.prepend(x1),
_132: x0 => x0.releaseResourcesAndAbandonContext(),
_133: x0 => x0.delete(),
_134: x0 => x0.stopPropagation(),
_135: x0 => x0.preventDefault(),
_136: x0 => x0.preventDefault(),
_137: x0 => x0.remove(),
_138: (x0,x1) => x0.append(x1),
_139: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_140: x0 => x0.remove(),
_141: x0 => x0.getCanvas(),
_142: x0 => x0.flush(),
_143: x0 => x0.dispose(),
_144: x0 => x0.remove(),
_145: x0 => x0.remove(),
_146: (x0,x1) => x0.ParagraphStyle(x1),
_147: (x0,x1) => x0.TextStyle(x1),
_148: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_149: x0 => x0.build(),
_150: x0 => x0.delete(),
_151: x0 => x0.pop(),
_152: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_153: (x0,x1) => x0.pushStyle(x1),
_154: x0 => x0.focus(),
_155: x0 => x0.select(),
_156: (x0,x1) => x0.append(x1),
_157: x0 => x0.remove(),
_161: x0 => x0.getReader(),
_164: (x0,x1,x2) => new FontFace(x0,x1,x2),
_170: x0 => new MutationObserver(x0),
_185: (x0,x1) => new OffscreenCanvas(x0,x1),
_187: (x0,x1,x2) => x0.addEventListener(x1,x2),
_188: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_191: x0 => new ResizeObserver(x0),
_193: x0 => ({createScriptURL: x0}),
_194: (x0,x1) => new Intl.Segmenter(x0,x1),
_195: x0 => x0.next(),
_196: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_198: x0 => x0.remove(),
_199: (x0,x1) => x0.append(x1),
_200: (x0,x1) => x0.appendChild(x1),
_201: (x0,x1) => x0.appendChild(x1),
_202: (x0,x1) => x0.append(x1),
_203: (x0,x1) => x0.append(x1),
_204: (x0,x1) => x0.append(x1),
_205: (x0,x1) => x0.appendChild(x1),
_206: x0 => x0.unlock(),
_212: x0 => x0.remove(),
_213: (x0,x1) => x0.append(x1),
_214: (x0,x1) => x0.append(x1),
_220: x0 => x0.save(),
_221: x0 => x0.restore(),
_222: (x0,x1) => x0.append(x1),
_223: (x0,x1) => x0.append(x1),
_224: (x0,x1) => x0.append(x1),
_225: (x0,x1) => x0.append(x1),
_227: (x0,x1) => x0.append(x1),
_228: (x0,x1) => x0.append(x1),
_229: x0 => x0.remove(),
_230: (x0,x1) => x0.append(x1),
_231: x0 => x0.remove(),
_232: x0 => x0.remove(),
_257: (x0,x1) => x0.append(x1),
_258: (x0,x1) => x0.append(x1),
_259: (x0,x1) => x0.append(x1),
_261: (x0,x1) => x0.append(x1),
_270: x0 => x0.remove(),
_271: (x0,x1) => x0.append(x1),
_272: (x0,x1) => x0.append(x1),
_273: (x0,x1) => x0.append(x1),
_274: (x0,x1) => x0.append(x1),
_275: (x0,x1) => x0.append(x1),
_276: (x0,x1) => x0.append(x1),
_277: (x0,x1) => x0.append(x1),
_278: (x0,x1,x2) => x0.insertBefore(x1,x2),
_286: x0 => new Promise(x0),
_289: x0 => x0.preventDefault(),
_290: (x0,x1) => x0.addListener(x1),
_291: (x0,x1) => x0.removeListener(x1),
_292: (x0,x1) => x0.append(x1),
_293: x0 => x0.disconnect(),
_294: (x0,x1) => x0.addListener(x1),
_295: (x0,x1) => x0.removeListener(x1),
_296: (x0,x1) => x0.append(x1),
_297: x0 => x0.remove(),
_298: (x0,x1) => x0.append(x1),
_299: x0 => x0.remove(),
_300: x0 => x0.remove(),
_304: x0 => x0.preventDefault(),
_305: (x0,x1) => x0.append(x1),
_306: x0 => x0.remove(),
_307: x0 => x0.preventDefault(),
_308: x0 => x0.preventDefault(),
_309: x0 => x0.preventDefault(),
_310: (x0,x1) => x0.append(x1),
_311: x0 => x0.remove(),
_312: x0 => x0.beginPath(),
_317: (x0,x1) => x0.append(x1),
_318: (x0,x1) => x0.append(x1),
_319: (x0,x1) => x0.append(x1),
_320: x0 => x0.remove(),
_321: x0 => x0.blur(),
_322: x0 => x0.focus(),
_323: x0 => x0.blur(),
_324: (x0,x1) => x0.append(x1),
_325: x0 => x0.remove(),
_326: (x0,x1) => x0.append(x1),
_327: x0 => x0.remove(),
_328: (x0,x1) => x0.append(x1),
_329: (x0,x1) => x0.append(x1),
_330: x0 => x0.remove(),
_331: (x0,x1) => x0.append(x1),
_332: (x0,x1) => x0.append(x1),
_333: (x0,x1,x2) => x0.insertBefore(x1,x2),
_334: x0 => x0.remove(),
_335: x0 => x0.remove(),
_336: x0 => x0.remove(),
_337: (x0,x1) => x0.append(x1),
_338: x0 => x0.remove(),
_339: x0 => x0.getBoundingClientRect(),
_340: x0 => x0.remove(),
_341: x0 => x0.blur(),
_343: (x0,x1) => x0.append(x1),
_344: x0 => x0.focus(),
_345: x0 => x0.remove(),
_346: x0 => x0.focus(),
_347: x0 => x0.focus(),
_348: x0 => x0.blur(),
_349: x0 => x0.remove(),
_350: (x0,x1) => x0.append(x1),
_351: x0 => x0.clear(),
_352: (x0,x1) => x0.add(x1),
_354: (x0,x1) => x0.appendChild(x1),
_356: x0 => x0.remove(),
_357: (x0,x1) => x0.append(x1),
_358: (x0,x1) => x0.append(x1),
_359: x0 => x0.getBoundingClientRect(),
_360: x0 => x0.getBoundingClientRect(),
_362: (x0,x1) => x0.append(x1),
_363: x0 => x0.preventDefault(),
_364: (x0,x1) => x0.append(x1),
_365: x0 => x0.remove(),
_366: (x0,x1) => x0.append(x1),
_367: (x0,x1,x2) => x0.insertBefore(x1,x2),
_368: (x0,x1) => x0.append(x1),
_369: x0 => x0.focus(),
_370: x0 => x0.focus(),
_371: x0 => x0.focus(),
_372: x0 => x0.focus(),
_373: x0 => x0.focus(),
_374: (x0,x1) => x0.append(x1),
_375: x0 => x0.focus(),
_376: x0 => x0.blur(),
_377: x0 => x0.remove(),
_379: x0 => x0.preventDefault(),
_380: x0 => x0.focus(),
_381: x0 => x0.preventDefault(),
_382: x0 => x0.preventDefault(),
_383: x0 => x0.preventDefault(),
_384: x0 => x0.focus(),
_385: x0 => x0.focus(),
_386: (x0,x1) => x0.append(x1),
_387: x0 => x0.focus(),
_388: x0 => x0.focus(),
_389: x0 => x0.focus(),
_390: x0 => x0.focus(),
_391: (x0,x1) => x0.observe(x1),
_392: x0 => x0.disconnect(),
_393: (x0,x1) => x0.appendChild(x1),
_395: x0 => x0.preventDefault(),
_397: (x0,x1) => x0.append(x1),
_399: x0 => x0.remove(),
_400: (x0,x1) => x0.append(x1),
_402: x0 => globalThis.window.flutterCanvasKit = x0,
_403: () => globalThis.window.flutterCanvasKit,
_404: x0 => x0.BlendMode,
_405: x0 => x0.PaintStyle,
_409: x0 => x0.TileMode,
_412: x0 => x0.FillType,
_416: x0 => x0.ClipOp,
_419: x0 => x0.RectHeightStyle,
_420: x0 => x0.RectWidthStyle,
_422: x0 => x0.TextAlign,
_423: x0 => x0.TextHeightBehavior,
_424: x0 => x0.TextDirection,
_425: x0 => x0.FontWeight,
_428: x0 => x0.Shader,
_433: (x0,x1) => x0.computeTonalColors(x1),
_435: x0 => x0.ParagraphBuilder,
_441: x0 => x0.NoDecoration,
_442: x0 => x0.UnderlineDecoration,
_443: x0 => x0.OverlineDecoration,
_444: x0 => x0.LineThroughDecoration,
_445: x0 => x0.DecorationStyle,
_446: x0 => x0.TextBaseline,
_449: x0 => x0.TypefaceFontProvider,
_450: x0 => x0.FontCollection,
_451: x0 => x0.Typeface,
_452: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_454: (x0,x1) => x0.MakeGrContext(x1),
_455: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_460: x0 => globalThis.window.CanvasKitInit(x0),
_461: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._461(f,x0,x1)),
_462: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_470: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_477: x0 => x0.Thin,
_478: x0 => x0.ExtraLight,
_479: x0 => x0.Light,
_480: x0 => x0.Normal,
_481: x0 => x0.Medium,
_482: x0 => x0.SemiBold,
_483: x0 => x0.Bold,
_484: x0 => x0.ExtraBold,
_485: x0 => x0.ExtraBlack,
_489: x0 => x0.value,
_490: x0 => x0.RTL,
_491: x0 => x0.LTR,
_492: x0 => x0.value,
_493: x0 => x0.Left,
_494: x0 => x0.Right,
_495: x0 => x0.Center,
_496: x0 => x0.Justify,
_497: x0 => x0.Start,
_498: x0 => x0.End,
_500: x0 => x0.All,
_501: x0 => x0.DisableFirstAscent,
_502: x0 => x0.DisableLastDescent,
_503: x0 => x0.DisableAll,
_505: x0 => x0.Tight,
_506: x0 => x0.Max,
_507: x0 => x0.IncludeLineSpacingMiddle,
_508: x0 => x0.IncludeLineSpacingTop,
_509: x0 => x0.IncludeLineSpacingBottom,
_510: x0 => x0.Strut,
_512: x0 => x0.Tight,
_513: x0 => x0.Max,
_523: x0 => x0.Difference,
_524: x0 => x0.Intersect,
_526: x0 => x0.Winding,
_527: x0 => x0.EvenOdd,
_544: x0 => x0.Stroke,
_545: x0 => x0.Fill,
_547: x0 => x0.Clear,
_548: x0 => x0.Src,
_549: x0 => x0.Dst,
_550: x0 => x0.SrcOver,
_551: x0 => x0.DstOver,
_552: x0 => x0.SrcIn,
_553: x0 => x0.DstIn,
_554: x0 => x0.SrcOut,
_555: x0 => x0.DstOut,
_556: x0 => x0.SrcATop,
_557: x0 => x0.DstATop,
_558: x0 => x0.Xor,
_559: x0 => x0.Plus,
_560: x0 => x0.Modulate,
_561: x0 => x0.Screen,
_562: x0 => x0.Overlay,
_563: x0 => x0.Darken,
_564: x0 => x0.Lighten,
_565: x0 => x0.ColorDodge,
_566: x0 => x0.ColorBurn,
_567: x0 => x0.HardLight,
_568: x0 => x0.SoftLight,
_569: x0 => x0.Difference,
_570: x0 => x0.Exclusion,
_571: x0 => x0.Multiply,
_572: x0 => x0.Hue,
_573: x0 => x0.Saturation,
_574: x0 => x0.Color,
_575: x0 => x0.Luminosity,
_581: x0 => x0.Clamp,
_582: x0 => x0.Repeat,
_583: x0 => x0.Mirror,
_584: x0 => x0.Decal,
_630: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_639: (x0,x1) => x0.setStrokeWidth(x1),
_642: (x0,x1) => x0.setAntiAlias(x1),
_644: (x0,x1) => x0.setColorInt(x1),
_666: () => globalThis.Float32Array,
_668: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_672: x0 => x0.toTypedArray(),
_678: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_681: (x0,x1,x2) => x0.addRRect(x1,x2),
_682: (x0,x1) => x0.addRect(x1),
_687: (x0,x1,x2) => x0.contains(x1,x2),
_690: x0 => x0.getBounds(),
_707: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_717: (x0,x1) => x0.beginRecording(x1),
_720: (x0,x1) => x0.clear(x1),
_722: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_723: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_724: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_729: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_731: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_738: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_739: (x0,x1,x2) => x0.drawOval(x1,x2),
_744: (x0,x1,x2) => x0.drawRRect(x1,x2),
_745: (x0,x1,x2) => x0.drawRect(x1,x2),
_747: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_749: x0 => x0.save(),
_751: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_755: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_756: (x0,x1,x2) => x0.scale(x1,x2),
_759: (x0,x1) => x0.concat(x1),
_760: (x0,x1,x2) => x0.translate(x1,x2),
_764: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_768: (x0,x1) => x0.addText(x1),
_773: x0 => x0.getText(),
_776: (x0,x1) => x0.setWordsUtf16(x1),
_778: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_781: (x0,x1) => x0.setLineBreaksUtf16(x1),
_784: (x0,x1) => x0.textAlign = x1,
_785: (x0,x1) => x0.textDirection = x1,
_786: (x0,x1) => x0.heightMultiplier = x1,
_787: (x0,x1) => x0.textHeightBehavior = x1,
_789: (x0,x1) => x0.ellipsis = x1,
_790: (x0,x1) => x0.textStyle = x1,
_792: (x0,x1) => x0.replaceTabCharacters = x1,
_793: (x0,x1) => x0.applyRoundingHack = x1,
_794: x0 => x0.Solid,
_795: x0 => x0.Double,
_796: x0 => x0.Dotted,
_797: x0 => x0.Dashed,
_798: x0 => x0.Wavy,
_800: x0 => x0.Alphabetic,
_801: x0 => x0.Ideographic,
_810: (x0,x1) => x0.backgroundColor = x1,
_811: (x0,x1) => x0.color = x1,
_813: (x0,x1) => x0.decoration = x1,
_814: (x0,x1) => x0.decorationThickness = x1,
_815: (x0,x1) => x0.decorationColor = x1,
_816: (x0,x1) => x0.decorationStyle = x1,
_817: (x0,x1) => x0.textBaseline = x1,
_818: (x0,x1) => x0.fontSize = x1,
_819: (x0,x1) => x0.letterSpacing = x1,
_820: (x0,x1) => x0.wordSpacing = x1,
_821: (x0,x1) => x0.heightMultiplier = x1,
_822: (x0,x1) => x0.halfLeading = x1,
_824: (x0,x1) => x0.fontFamilies = x1,
_825: (x0,x1) => x0.fontStyle = x1,
_828: (x0,x1) => x0.fontVariations = x1,
_837: (x0,x1) => x0.weight = x1,
_844: (x0,x1) => x0.axis = x1,
_845: (x0,x1) => x0.value = x1,
_846: (x0,x1) => x0.getGlyphIDs(x1),
_847: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_851: (x0,x1,x2) => x0.registerFont(x1,x2),
_867: x0 => x0.rect,
_870: x0 => x0.dir,
_871: x0 => x0.getAlphabeticBaseline(),
_872: x0 => x0.didExceedMaxLines(),
_874: x0 => x0.getHeight(),
_875: x0 => x0.getIdeographicBaseline(),
_877: x0 => x0.getLongestLine(),
_878: x0 => x0.getMaxIntrinsicWidth(),
_879: x0 => x0.getMinIntrinsicWidth(),
_880: x0 => x0.getMaxWidth(),
_881: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_882: x0 => x0.getRectsForPlaceholders(),
_884: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_886: (x0,x1) => x0.layout(x1),
_888: x0 => x0.affinity,
_889: x0 => x0.pos,
_893: x0 => x0.ambient,
_894: x0 => x0.spot,
_899: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_901: x0 => x0.isDeleted(),
_926: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_928: (x0,x1) => x0.makeShader(x1),
_929: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_930: x0 => x0.remove(),
_931: x0 => x0.remove(),
_932: (x0,x1) => x0.appendChild(x1),
_935: () => globalThis.window.flutterConfiguration,
_936: x0 => x0.assetBase,
_937: x0 => x0.canvasKitBaseUrl,
_938: x0 => x0.canvasKitVariant,
_939: x0 => x0.canvasKitForceCpuOnly,
_940: x0 => x0.canvasKitMaximumSurfaces,
_941: x0 => x0.debugShowSemanticsNodes,
_942: x0 => x0.hostElement,
_943: x0 => x0.nonce,
_944: x0 => x0.renderer,
_945: x0 => x0.useColorEmoji,
_946: () => globalThis.window.flutterWebRenderer,
_949: x0 => x0.console,
_950: x0 => x0.devicePixelRatio,
_951: x0 => x0.document,
_952: x0 => x0.history,
_953: x0 => x0.innerHeight,
_954: x0 => x0.innerWidth,
_955: x0 => x0.location,
_956: x0 => x0.navigator,
_957: x0 => x0.visualViewport,
_958: x0 => x0.performance,
_959: (x0,x1) => x0.fetch(x1),
_962: (x0,x1) => x0.dispatchEvent(x1),
_963: (x0,x1) => x0.matchMedia(x1),
_964: (x0,x1) => x0.getComputedStyle(x1),
_966: x0 => x0.screen,
_967: (x0,x1) => x0.requestAnimationFrame(x1),
_968: f => finalizeWrapper(f,x0 => dartInstance.exports._968(f,x0)),
_972: x0 => x0.trustedTypes,
_973: (x0,x1) => x0.warn(x1),
_974: (x0,x1) => x0.error(x1),
_976: (x0,x1) => x0.debug(x1),
_977: () => globalThis.window,
_978: () => globalThis.Intl,
_979: () => globalThis.Symbol,
_980: x0 => x0.clipboard,
_981: x0 => x0.maxTouchPoints,
_982: x0 => x0.vendor,
_983: x0 => x0.language,
_984: x0 => x0.platform,
_985: x0 => x0.userAgent,
_986: x0 => x0.languages,
_987: x0 => x0.documentElement,
_988: (x0,x1) => x0.querySelector(x1),
_991: (x0,x1) => x0.createElement(x1),
_993: (x0,x1) => x0.execCommand(x1),
_995: (x0,x1,x2) => x0.createElementNS(x1,x2),
_997: (x0,x1) => x0.createTextNode(x1),
_998: (x0,x1) => x0.createEvent(x1),
_1001: x0 => x0.fonts,
_1002: x0 => x0.head,
_1003: x0 => x0.body,
_1004: (x0,x1) => x0.title = x1,
_1007: x0 => x0.activeElement,
_1009: () => globalThis.document,
_1010: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1011: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1012: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1013: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1014: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1016: f => finalizeWrapper(f,x0 => dartInstance.exports._1016(f,x0)),
_1017: x0 => x0.target,
_1019: x0 => x0.timeStamp,
_1020: x0 => x0.type,
_1026: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1031: x0 => x0.firstChild,
_1034: x0 => x0.lastChild,
_1036: (x0,x1) => x0.appendChild(x1),
_1037: x0 => x0.parentElement,
_1039: x0 => x0.parentNode,
_1042: (x0,x1) => x0.removeChild(x1),
_1043: (x0,x1) => x0.removeChild(x1),
_1044: x0 => x0.isConnected,
_1045: (x0,x1) => x0.textContent = x1,
_1046: (x0,x1) => x0.cloneNode(x1),
_1047: (x0,x1) => x0.contains(x1),
_1051: x0 => x0.children,
_1053: x0 => x0.clientHeight,
_1054: x0 => x0.clientWidth,
_1055: x0 => x0.id,
_1056: (x0,x1) => x0.id = x1,
_1059: (x0,x1) => x0.spellcheck = x1,
_1060: x0 => x0.tagName,
_1061: x0 => x0.style,
_1062: (x0,x1) => x0.append(x1),
_1063: (x0,x1) => x0.getAttribute(x1),
_1065: x0 => x0.getBoundingClientRect(),
_1070: (x0,x1) => x0.querySelectorAll(x1),
_1072: x0 => x0.remove(),
_1074: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1075: (x0,x1) => x0.removeAttribute(x1),
_1076: (x0,x1) => x0.tabIndex = x1,
_1079: x0 => x0.scrollTop,
_1080: (x0,x1) => x0.scrollTop = x1,
_1081: x0 => x0.scrollLeft,
_1082: (x0,x1) => x0.scrollLeft = x1,
_1083: x0 => x0.classList,
_1084: (x0,x1) => x0.className = x1,
_1091: (x0,x1) => x0.getElementsByClassName(x1),
_1093: x0 => x0.click(),
_1096: (x0,x1) => x0.attachShadow(x1),
_1099: (x0,x1) => x0.getPropertyValue(x1),
_1101: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1103: (x0,x1) => x0.removeProperty(x1),
_1105: x0 => x0.offsetLeft,
_1106: x0 => x0.offsetTop,
_1107: x0 => x0.offsetParent,
_1109: (x0,x1) => x0.name = x1,
_1110: x0 => x0.content,
_1111: (x0,x1) => x0.content = x1,
_1121: (x0,x1) => x0.src = x1,
_1122: (x0,x1) => x0.nonce = x1,
_1124: (x0,x1) => x0.nonce = x1,
_1126: x0 => x0.sheet,
_1129: x0 => x0.now(),
_1131: (x0,x1) => x0.width = x1,
_1133: (x0,x1) => x0.height = x1,
_1135: (x0,x1) => x0.toDataURL(x1),
_1137: (x0,x1) => x0.getContext(x1),
_1138: (x0,x1,x2) => x0.getContext(x1,x2),
_1139: (x0,x1) => x0.getParameter(x1),
_1140: x0 => x0.SAMPLES,
_1141: x0 => x0.STENCIL_BITS,
_1143: x0 => x0.fillStyle,
_1144: (x0,x1) => x0.fillStyle = x1,
_1145: x0 => x0.font,
_1146: (x0,x1) => x0.font = x1,
_1148: (x0,x1) => x0.direction = x1,
_1149: (x0,x1) => x0.lineWidth = x1,
_1150: (x0,x1) => x0.strokeStyle = x1,
_1151: x0 => x0.strokeStyle,
_1156: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1157: (x0,x1,x2) => x0.createPattern(x1,x2),
_1160: x0 => x0.fill(),
_1161: (x0,x1) => x0.fill(x1),
_1162: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1163: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1168: (x0,x1,x2) => x0.lineTo(x1,x2),
_1170: (x0,x1) => x0.measureText(x1),
_1171: (x0,x1,x2) => x0.moveTo(x1,x2),
_1172: x0 => x0.save(),
_1174: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1176: x0 => x0.restore(),
_1178: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1179: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1180: x0 => x0.clip(),
_1181: (x0,x1) => x0.clip(x1),
_1183: (x0,x1,x2) => x0.scale(x1,x2),
_1184: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1185: (x0,x1,x2) => x0.translate(x1,x2),
_1186: (x0,x1) => x0.rotate(x1),
_1187: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1188: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1189: (x0,x1) => x0.globalCompositeOperation = x1,
_1190: (x0,x1) => x0.lineCap = x1,
_1191: (x0,x1) => x0.lineJoin = x1,
_1192: (x0,x1) => x0.shadowBlur = x1,
_1194: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1195: (x0,x1) => x0.filter = x1,
_1196: (x0,x1) => x0.shadowOffsetX = x1,
_1197: (x0,x1) => x0.shadowOffsetY = x1,
_1198: (x0,x1) => x0.shadowColor = x1,
_1200: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1202: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1203: (x0,x1) => x0.globalAlpha = x1,
_1207: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1208: x0 => x0.status,
_1210: x0 => x0.body,
_1211: x0 => x0.arrayBuffer(),
_1216: x0 => x0.read(),
_1217: x0 => x0.value,
_1218: x0 => x0.done,
_1219: x0 => x0.width,
_1221: x0 => x0.x,
_1222: x0 => x0.y,
_1223: x0 => x0.width,
_1224: x0 => x0.height,
_1225: x0 => x0.top,
_1226: x0 => x0.right,
_1227: x0 => x0.bottom,
_1228: x0 => x0.left,
_1229: x0 => x0.load(),
_1237: x0 => x0.height,
_1238: x0 => x0.width,
_1239: (x0,x1) => x0.value = x1,
_1242: (x0,x1) => x0.placeholder = x1,
_1243: (x0,x1) => x0.name = x1,
_1244: x0 => x0.selectionStart,
_1245: x0 => x0.selectionEnd,
_1248: x0 => x0.value,
_1249: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1253: x0 => x0.readText(),
_1254: (x0,x1) => x0.writeText(x1),
_1255: x0 => x0.altKey,
_1256: x0 => x0.code,
_1257: x0 => x0.ctrlKey,
_1258: x0 => x0.key,
_1259: x0 => x0.keyCode,
_1260: x0 => x0.location,
_1261: x0 => x0.metaKey,
_1262: x0 => x0.repeat,
_1263: x0 => x0.shiftKey,
_1264: x0 => x0.isComposing,
_1265: (x0,x1) => x0.getModifierState(x1),
_1266: x0 => x0.state,
_1269: (x0,x1) => x0.go(x1),
_1270: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1271: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1272: x0 => x0.pathname,
_1273: x0 => x0.search,
_1274: x0 => x0.hash,
_1277: x0 => x0.state,
_1280: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1280(f,x0,x1)),
_1282: (x0,x1,x2) => x0.observe(x1,x2),
_1285: x0 => x0.attributeName,
_1286: x0 => x0.type,
_1287: x0 => x0.matches,
_1290: x0 => x0.matches,
_1291: x0 => x0.clientX,
_1292: x0 => x0.clientY,
_1293: x0 => x0.offsetX,
_1294: x0 => x0.offsetY,
_1297: x0 => x0.button,
_1298: x0 => x0.buttons,
_1299: x0 => x0.ctrlKey,
_1300: (x0,x1) => x0.getModifierState(x1),
_1301: x0 => x0.pointerId,
_1302: x0 => x0.pointerType,
_1303: x0 => x0.pressure,
_1304: x0 => x0.tiltX,
_1305: x0 => x0.tiltY,
_1306: x0 => x0.getCoalescedEvents(),
_1307: x0 => x0.deltaX,
_1308: x0 => x0.deltaY,
_1309: x0 => x0.wheelDeltaX,
_1310: x0 => x0.wheelDeltaY,
_1311: x0 => x0.deltaMode,
_1312: x0 => x0.altKey,
_1313: x0 => x0.ctrlKey,
_1314: x0 => x0.metaKey,
_1315: x0 => x0.shiftKey,
_1316: x0 => x0.changedTouches,
_1317: x0 => x0.identifier,
_1318: x0 => x0.clientX,
_1319: x0 => x0.clientY,
_1320: x0 => x0.data,
_1321: (x0,x1) => x0.type = x1,
_1322: (x0,x1) => x0.max = x1,
_1323: (x0,x1) => x0.min = x1,
_1324: (x0,x1) => x0.value = x1,
_1325: x0 => x0.value,
_1326: x0 => x0.disabled,
_1327: (x0,x1) => x0.disabled = x1,
_1328: (x0,x1) => x0.placeholder = x1,
_1329: (x0,x1) => x0.name = x1,
_1330: (x0,x1) => x0.autocomplete = x1,
_1331: x0 => x0.selectionStart,
_1332: x0 => x0.selectionEnd,
_1336: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1344: (x0,x1) => x0.add(x1),
_1347: (x0,x1) => x0.noValidate = x1,
_1348: (x0,x1) => x0.method = x1,
_1349: (x0,x1) => x0.action = x1,
_1352: (x0,x1) => x0.height = x1,
_1353: (x0,x1) => x0.width = x1,
_1356: (x0,x1,x2) => x0.getContext(x1,x2),
_1368: x0 => x0.cssRules,
_1370: (x0,x1,x2) => x0.insertRule(x1,x2),
_1372: x0 => x0.orientation,
_1375: (x0,x1) => x0.lock(x1),
_1390: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1390(f,x0,x1)),
_1395: x0 => x0.contentRect,
_1397: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1398: (x0,x1) => x0.createScriptURL(x1),
_1400: x0 => x0.length,
_1401: (x0,x1) => x0.item(x1),
_1402: x0 => x0.length,
_1404: (x0,x1) => x0.item(x1),
_1405: x0 => x0.iterator,
_1406: x0 => x0.Segmenter,
_1407: x0 => x0.v8BreakIterator,
_1408: (x0,x1) => x0.segment(x1),
_1410: x0 => x0.done,
_1411: x0 => x0.value,
_1412: x0 => x0.index,
_1416: (x0,x1) => x0.adoptText(x1),
_1417: x0 => x0.first(),
_1418: x0 => x0.next(),
_1420: x0 => x0.current(),
_1424: () => globalThis.window.FinalizationRegistry,
_1425: (x0,x1,x2) => x0.register(x1,x2),
_1428: x0 => x0.loader,
_1429: () => globalThis._flutter,
_1431: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1432: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1432(f,x0,x1)),
_1500: f => finalizeWrapper(f,x0 => dartInstance.exports._1500(f,x0)),
_1501: f => finalizeWrapper(f,x0 => dartInstance.exports._1501(f,x0)),
_1531: (x0,x1) => x0.matchMedia(x1),
_1532: x0 => x0.navigator,
_1534: () => globalThis.window,
_1535: x0 => x0.matches,
_1536: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

