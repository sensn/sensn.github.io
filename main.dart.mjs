  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;
    function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

    // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _17706: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_17707: s => console.log(stringFromDartString(s)),
_17609: o => o === undefined,
_17610: o => typeof o === 'boolean',
_17611: o => typeof o === 'number',
_17613: o => typeof o === 'string',
_17616: o => o instanceof Int8Array,
_17617: o => o instanceof Uint8Array,
_17618: o => o instanceof Uint8ClampedArray,
_17619: o => o instanceof Int16Array,
_17620: o => o instanceof Uint16Array,
_17621: o => o instanceof Int32Array,
_17622: o => o instanceof Uint32Array,
_17623: o => o instanceof Float32Array,
_17624: o => o instanceof Float64Array,
_17625: o => o instanceof ArrayBuffer,
_17626: o => o instanceof DataView,
_17627: o => o instanceof Array,
_17628: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_17630: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_17631: o => o instanceof RegExp,
_17632: (l, r) => l === r,
_17633: o => o,
_17634: o => o,
_17635: o => o,
_17636: b => !!b,
_17637: o => o.length,
_17640: (o, i) => o[i],
_17641: f => f.dartFunction,
_17642: l => arrayFromDartList(Int8Array, l),
_17643: l => arrayFromDartList(Uint8Array, l),
_17644: l => arrayFromDartList(Uint8ClampedArray, l),
_17645: l => arrayFromDartList(Int16Array, l),
_17646: l => arrayFromDartList(Uint16Array, l),
_17647: l => arrayFromDartList(Int32Array, l),
_17648: l => arrayFromDartList(Uint32Array, l),
_17649: l => arrayFromDartList(Float32Array, l),
_17650: l => arrayFromDartList(Float64Array, l),
_17651: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_17652: l => arrayFromDartList(Array, l),
_17653: stringFromDartString,
_17654: stringToDartString,
_17655: () => ({}),
_17656: () => [],
_17657: () => globalThis,
_17658: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_17659: (o, p) => p in o,
_17660: (o, p) => o[p],
_17661: (o, p, v) => o[p] = v,
_17662: (o, m, a) => o[m].apply(o, a),
_17665: (p, s, f) => p.then(s, f),
_17668: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_17598: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_17599: (x0,x1) => x0.exec(x1),
_17600: (x0,x1) => x0.test(x1),
_17601: (x0,x1) => x0.exec(x1),
_17602: (x0,x1) => x0.exec(x1),
_17603: x0 => x0.pop(),
_17606: (x0,x1) => x0[x1],
_17607: (x0,x1,x2) => x0[x1] = x2,
_17664: o => String(o),
_17666: x0 => new Array(x0),
_17670: x0 => x0.index,
_17672: x0 => x0.length,
_17674: (x0,x1) => x0.exec(x1),
_17676: x0 => x0.flags,
_17677: x0 => x0.multiline,
_17678: x0 => x0.ignoreCase,
_17679: x0 => x0.unicode,
_17680: x0 => x0.dotAll,
_17681: (x0,x1) => x0.lastIndex = x1,
_17712: (a, i) => a.push(i),
_17716: a => a.pop(),
_17717: (a, i) => a.splice(i, 1),
_17723: a => a.length,
_17725: (a, i) => a[i],
_17726: (a, i, v) => a[i] = v,
_17728: (s, i) => s.charCodeAt(i),
_17729: (a, b) => a + b,
_17730: (o, a, b) => o.replace(a, b),
_17732: (s, t) => s.split(t),
_17733: (o, s, i) => o.substring(s, i),
_17734: s => s.toLowerCase(),
_17735: s => s.toUpperCase(),
_17736: s => s.trim(),
_17737: s => s.trimLeft(),
_17738: s => s.trimRight(),
_17740: (s, p, i) => s.indexOf(p, i),
_17741: (s, p, i) => s.lastIndexOf(p, i),
_17742: s => s.length,
_17743: (s, i) => s[i],
_17745: o => o.buffer,
_17746: o => o.byteLength,
_17747: o => o.byteOffset,
_17748: o => o.BYTES_PER_ELEMENT,
_17749: o => o.length,
_17750: (b, o) => new DataView(b, o),
_17751: (b, o, l) => new DataView(b, o, l),
_17753: (b, o, e) => b.getFloat64(o, e),
_17755: (b, o, e) => b.getInt32(o, e),
_17756: (b, o, e) => b.getBigInt64(o, e),
_17758: (b, o, e) => b.getUint16(o, e),
_17759: (b, o, e) => b.getUint32(o, e),
_17761: (b, o) => b.getUint8(o),
_17772: (o, i) => o[i],
_17773: (o, i, v) => o[i] = v,
_17774: (b, o) => new Uint8Array(b, o),
_17775: (b, o, l) => new Uint8Array(b, o, l),
_17789: (b, o, l) => new Int32Array(b, o, l),
_17791: (o, i) => o[i],
_17792: (o, i, v) => o[i] = v,
_17795: (b, o, l) => new BigInt64Array(b, o, l),
_17797: (o, i) => o[i],
_17798: (o, i, v) => o[i] = v,
_17799: (b, o, l) => new Float32Array(b, o, l),
_17801: (b, o, l) => new Float64Array(b, o, l),
_17803: (s, k, e) => s.subarray(k, e),
_17804: (t, s, i) => t.set(s, i),
_17708: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_17709: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_17810: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_17811: (handle) => clearTimeout(handle),
_17812: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_17813: (handle) => clearInterval(handle),
_17815: () => Date.now(),
_17814: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_17805: (o, t) => o instanceof t,
_17807: f => finalizeWrapper(f,x0 => dartInstance.exports._17807(f,x0)),
_17808: f => finalizeWrapper(f,x0 => dartInstance.exports._17808(f,x0)),
_17809: o => Object.keys(o),
_17682: o => new WeakRef(o),
_17683: r => r.deref(),
_17688: v => stringToDartString(v.toString()),
_17689: (d, digits) => stringToDartString(d.toFixed(digits)),
_17692: (d, precision) => stringToDartString(d.toPrecision(precision)),
_17693: Date.now,
_17695: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_17696: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_17697: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_17698: () => typeof dartUseDateNowForTicks !== "undefined",
_17699: () => 1000 * performance.now(),
_17700: () => Date.now(),
_17701: () => {
      // On browsers return `globalThis.location.href`
      if (globalThis.location != null) {
        return stringToDartString(globalThis.location.href);
      }
      return null;
    },
_17702: () => {
        return typeof process != undefined &&
               Object.prototype.toString.call(process) == "[object process]" &&
               process.platform == "win32"
      },
_17703: () => new WeakMap(),
_17704: (map, o) => map.get(o),
_17705: (map, o, v) => map.set(o, v),
_1: () => ({}),
_33: (x0,x1) => x0.drawPaint(x1),
_34: (x0,x1,x2) => x0.drawPath(x1,x2),
_35: (x0,x1) => x0.drawPicture(x1),
_37: x0 => x0.restore(),
_38: x0 => ({locateFile: x0}),
_39: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_40: () => new window.flutterCanvasKit.Paint(),
_41: (x0,x1) => ({B: x0,C: x1}),
_42: (x0,x1) => ({filter: x0,mipmap: x1}),
_43: () => new window.flutterCanvasKit.Path(),
_47: () => new window.flutterCanvasKit.PictureRecorder(),
_48: () => ({}),
_49: () => ({}),
_51: () => ({}),
_54: () => ({}),
_55: x0 => new window.flutterCanvasKit.Font(x0),
_56: (x0,x1) => ({ambient: x0,spot: x1}),
_70: x0 => x0.remove(),
_78: (x0,x1,x2) => x0.insertBefore(x1,x2),
_80: (x0,x1) => x0.append(x1),
_81: (x0,x1) => x0.append(x1),
_84: (x0,x1) => x0.append(x1),
_88: x0 => x0.delete(),
_89: x0 => x0.delete(),
_90: x0 => x0.Make(),
_91: x0 => x0.Make(),
_92: x0 => x0.enableFontFallback(),
_93: (x0,x1) => x0.setDefaultFontManager(x1),
_98: x0 => x0.delete(),
_99: (x0,x1) => x0.setBlendMode(x1),
_100: (x0,x1) => x0.setStyle(x1),
_104: (x0,x1) => x0.setShader(x1),
_108: (x0,x1) => x0.setImageFilter(x1),
_109: (x0,x1) => x0.setFillType(x1),
_112: (x0,x1) => x0.setFillType(x1),
_117: x0 => x0.copy(),
_122: x0 => x0.finishRecordingAsPicture(),
_123: x0 => x0.delete(),
_124: (x0,x1) => x0.prepend(x1),
_125: x0 => x0.releaseResourcesAndAbandonContext(),
_126: x0 => x0.delete(),
_127: x0 => x0.stopPropagation(),
_128: x0 => x0.preventDefault(),
_129: x0 => x0.preventDefault(),
_130: x0 => x0.remove(),
_131: (x0,x1) => x0.append(x1),
_132: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_133: x0 => x0.remove(),
_134: x0 => x0.getCanvas(),
_135: x0 => x0.flush(),
_136: x0 => x0.dispose(),
_137: x0 => x0.remove(),
_138: x0 => x0.remove(),
_139: (x0,x1) => x0.ParagraphStyle(x1),
_140: (x0,x1) => x0.TextStyle(x1),
_141: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_142: x0 => x0.build(),
_143: x0 => x0.delete(),
_144: x0 => x0.pop(),
_145: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_146: (x0,x1) => x0.pushStyle(x1),
_147: x0 => x0.focus(),
_148: x0 => x0.select(),
_149: (x0,x1) => x0.append(x1),
_150: x0 => x0.remove(),
_151: x0 => x0.unlock(),
_155: x0 => x0.getReader(),
_165: x0 => new MutationObserver(x0),
_184: (x0,x1,x2) => x0.addEventListener(x1,x2),
_185: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_188: x0 => new ResizeObserver(x0),
_190: x0 => ({createScriptURL: x0}),
_191: (x0,x1) => new Intl.Segmenter(x0,x1),
_192: x0 => x0.next(),
_193: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_195: x0 => x0.remove(),
_196: (x0,x1) => x0.append(x1),
_197: (x0,x1) => x0.appendChild(x1),
_198: (x0,x1) => x0.appendChild(x1),
_199: (x0,x1) => x0.append(x1),
_200: (x0,x1) => x0.append(x1),
_201: (x0,x1) => x0.append(x1),
_202: (x0,x1) => x0.appendChild(x1),
_282: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._282(f,arguments.length,x0) }),
_283: f => finalizeWrapper(f,() => dartInstance.exports._283(f)),
_284: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_285: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._285(f,arguments.length,x0) }),
_286: x0 => ({runApp: x0}),
_289: x0 => x0.preventDefault(),
_290: (x0,x1) => x0.addListener(x1),
_291: (x0,x1) => x0.removeListener(x1),
_292: (x0,x1) => x0.append(x1),
_293: x0 => x0.disconnect(),
_294: (x0,x1) => x0.addListener(x1),
_295: (x0,x1) => x0.removeListener(x1),
_296: (x0,x1) => x0.append(x1),
_297: x0 => x0.remove(),
_298: (x0,x1) => x0.append(x1),
_299: x0 => x0.remove(),
_300: x0 => x0.remove(),
_304: x0 => x0.preventDefault(),
_305: (x0,x1) => x0.append(x1),
_306: x0 => x0.remove(),
_307: x0 => x0.preventDefault(),
_308: x0 => x0.preventDefault(),
_309: x0 => x0.preventDefault(),
_310: (x0,x1) => x0.append(x1),
_311: x0 => x0.remove(),
_321: (x0,x1) => x0.append(x1),
_322: (x0,x1) => x0.append(x1),
_323: (x0,x1) => x0.append(x1),
_324: x0 => x0.remove(),
_325: x0 => x0.blur(),
_326: x0 => x0.focus(),
_327: x0 => x0.blur(),
_328: (x0,x1) => x0.append(x1),
_329: x0 => x0.remove(),
_330: (x0,x1) => x0.append(x1),
_331: x0 => x0.remove(),
_332: (x0,x1) => x0.append(x1),
_333: (x0,x1) => x0.append(x1),
_334: x0 => x0.remove(),
_335: (x0,x1) => x0.append(x1),
_336: (x0,x1) => x0.append(x1),
_337: (x0,x1,x2) => x0.insertBefore(x1,x2),
_338: x0 => x0.remove(),
_339: x0 => x0.remove(),
_340: x0 => x0.remove(),
_341: (x0,x1) => x0.append(x1),
_342: x0 => x0.remove(),
_343: x0 => x0.getBoundingClientRect(),
_344: x0 => x0.remove(),
_345: x0 => x0.blur(),
_347: (x0,x1) => x0.append(x1),
_348: x0 => x0.focus(),
_349: x0 => x0.remove(),
_350: x0 => x0.focus(),
_351: x0 => x0.focus(),
_352: x0 => x0.blur(),
_353: x0 => x0.remove(),
_367: (x0,x1) => x0.append(x1),
_368: x0 => x0.remove(),
_369: (x0,x1) => x0.append(x1),
_370: (x0,x1,x2) => x0.insertBefore(x1,x2),
_371: (x0,x1) => x0.append(x1),
_372: x0 => x0.focus(),
_373: x0 => x0.focus(),
_374: x0 => x0.focus(),
_375: x0 => x0.focus(),
_376: x0 => x0.focus(),
_377: (x0,x1) => x0.append(x1),
_378: x0 => x0.focus(),
_379: x0 => x0.blur(),
_380: x0 => x0.remove(),
_382: x0 => x0.preventDefault(),
_383: x0 => x0.focus(),
_384: x0 => x0.preventDefault(),
_385: x0 => x0.preventDefault(),
_386: x0 => x0.preventDefault(),
_387: x0 => x0.focus(),
_388: x0 => x0.focus(),
_389: (x0,x1) => x0.append(x1),
_390: x0 => x0.focus(),
_391: x0 => x0.focus(),
_392: x0 => x0.focus(),
_393: x0 => x0.focus(),
_394: (x0,x1) => x0.observe(x1),
_395: x0 => x0.disconnect(),
_396: (x0,x1) => x0.appendChild(x1),
_398: (x0,x1) => x0.append(x1),
_400: x0 => x0.remove(),
_401: (x0,x1) => x0.append(x1),
_403: x0 => globalThis.window.flutterCanvasKit = x0,
_404: () => globalThis.window.flutterCanvasKit,
_405: x0 => x0.BlendMode,
_406: x0 => x0.PaintStyle,
_410: x0 => x0.TileMode,
_411: x0 => x0.FilterMode,
_412: x0 => x0.MipmapMode,
_413: x0 => x0.FillType,
_417: x0 => x0.ClipOp,
_420: x0 => x0.RectHeightStyle,
_421: x0 => x0.RectWidthStyle,
_423: x0 => x0.TextAlign,
_424: x0 => x0.TextHeightBehavior,
_425: x0 => x0.TextDirection,
_426: x0 => x0.FontWeight,
_429: x0 => x0.Shader,
_432: x0 => x0.ImageFilter,
_434: (x0,x1) => x0.computeTonalColors(x1),
_436: x0 => x0.ParagraphBuilder,
_442: x0 => x0.NoDecoration,
_443: x0 => x0.UnderlineDecoration,
_444: x0 => x0.OverlineDecoration,
_445: x0 => x0.LineThroughDecoration,
_446: x0 => x0.DecorationStyle,
_447: x0 => x0.TextBaseline,
_450: x0 => x0.TypefaceFontProvider,
_451: x0 => x0.FontCollection,
_452: x0 => x0.Typeface,
_453: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_455: (x0,x1) => x0.MakeGrContext(x1),
_456: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_463: x0 => globalThis.window.CanvasKitInit(x0),
_464: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._464(f,x0,x1)),
_465: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_473: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_480: x0 => x0.Thin,
_481: x0 => x0.ExtraLight,
_482: x0 => x0.Light,
_483: x0 => x0.Normal,
_484: x0 => x0.Medium,
_485: x0 => x0.SemiBold,
_486: x0 => x0.Bold,
_487: x0 => x0.ExtraBold,
_488: x0 => x0.ExtraBlack,
_492: x0 => x0.value,
_493: x0 => x0.RTL,
_494: x0 => x0.LTR,
_495: x0 => x0.value,
_496: x0 => x0.Left,
_497: x0 => x0.Right,
_498: x0 => x0.Center,
_499: x0 => x0.Justify,
_500: x0 => x0.Start,
_501: x0 => x0.End,
_503: x0 => x0.All,
_504: x0 => x0.DisableFirstAscent,
_505: x0 => x0.DisableLastDescent,
_506: x0 => x0.DisableAll,
_508: x0 => x0.Tight,
_509: x0 => x0.Max,
_510: x0 => x0.IncludeLineSpacingMiddle,
_511: x0 => x0.IncludeLineSpacingTop,
_512: x0 => x0.IncludeLineSpacingBottom,
_513: x0 => x0.Strut,
_515: x0 => x0.Tight,
_516: x0 => x0.Max,
_526: x0 => x0.Difference,
_527: x0 => x0.Intersect,
_529: x0 => x0.Winding,
_530: x0 => x0.EvenOdd,
_547: x0 => x0.Stroke,
_548: x0 => x0.Fill,
_550: x0 => x0.Clear,
_551: x0 => x0.Src,
_552: x0 => x0.Dst,
_553: x0 => x0.SrcOver,
_554: x0 => x0.DstOver,
_555: x0 => x0.SrcIn,
_556: x0 => x0.DstIn,
_557: x0 => x0.SrcOut,
_558: x0 => x0.DstOut,
_559: x0 => x0.SrcATop,
_560: x0 => x0.DstATop,
_561: x0 => x0.Xor,
_562: x0 => x0.Plus,
_563: x0 => x0.Modulate,
_564: x0 => x0.Screen,
_565: x0 => x0.Overlay,
_566: x0 => x0.Darken,
_567: x0 => x0.Lighten,
_568: x0 => x0.ColorDodge,
_569: x0 => x0.ColorBurn,
_570: x0 => x0.HardLight,
_571: x0 => x0.SoftLight,
_572: x0 => x0.Difference,
_573: x0 => x0.Exclusion,
_574: x0 => x0.Multiply,
_575: x0 => x0.Hue,
_576: x0 => x0.Saturation,
_577: x0 => x0.Color,
_578: x0 => x0.Luminosity,
_584: x0 => x0.Clamp,
_585: x0 => x0.Repeat,
_586: x0 => x0.Mirror,
_587: x0 => x0.Decal,
_589: x0 => x0.Nearest,
_590: x0 => x0.Linear,
_592: x0 => x0.None,
_594: x0 => x0.Linear,
_632: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_641: (x0,x1) => x0.setStrokeWidth(x1),
_645: (x0,x1) => x0.setAntiAlias(x1),
_646: (x0,x1) => x0.setColorInt(x1),
_663: (x0,x1,x2,x3) => x0.MakeMatrixTransform(x1,x2,x3),
_667: (x0,x1) => x0.getOutputBounds(x1),
_670: () => globalThis.Float32Array,
_672: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_676: x0 => x0.toTypedArray(),
_683: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_687: (x0,x1,x2) => x0.addRRect(x1,x2),
_688: (x0,x1) => x0.addRect(x1),
_693: (x0,x1,x2) => x0.contains(x1,x2),
_696: x0 => x0.getBounds(),
_711: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_722: (x0,x1,x2) => x0.beginRecording(x1,x2),
_725: (x0,x1) => x0.clear(x1),
_727: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_728: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_729: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_734: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_736: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_743: (x0,x1,x2,x3,x4,x5) => x0.drawLine(x1,x2,x3,x4,x5),
_744: (x0,x1,x2) => x0.drawOval(x1,x2),
_749: (x0,x1,x2) => x0.drawRRect(x1,x2),
_750: (x0,x1,x2) => x0.drawRect(x1,x2),
_751: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_753: x0 => x0.save(),
_755: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_758: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_760: (x0,x1,x2) => x0.scale(x1,x2),
_762: (x0,x1) => x0.concat(x1),
_764: (x0,x1,x2) => x0.translate(x1,x2),
_768: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_770: x0 => x0.cullRect(),
_774: (x0,x1) => x0.addText(x1),
_779: x0 => x0.getText(),
_782: (x0,x1) => x0.setWordsUtf16(x1),
_785: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_787: (x0,x1) => x0.setLineBreaksUtf16(x1),
_791: (x0,x1) => x0.textAlign = x1,
_792: (x0,x1) => x0.textDirection = x1,
_793: (x0,x1) => x0.heightMultiplier = x1,
_794: (x0,x1) => x0.textHeightBehavior = x1,
_796: (x0,x1) => x0.ellipsis = x1,
_797: (x0,x1) => x0.textStyle = x1,
_799: (x0,x1) => x0.replaceTabCharacters = x1,
_800: (x0,x1) => x0.applyRoundingHack = x1,
_801: x0 => x0.Solid,
_802: x0 => x0.Double,
_803: x0 => x0.Dotted,
_804: x0 => x0.Dashed,
_805: x0 => x0.Wavy,
_807: x0 => x0.Alphabetic,
_808: x0 => x0.Ideographic,
_817: (x0,x1) => x0.backgroundColor = x1,
_818: (x0,x1) => x0.color = x1,
_820: (x0,x1) => x0.decoration = x1,
_821: (x0,x1) => x0.decorationThickness = x1,
_822: (x0,x1) => x0.decorationColor = x1,
_823: (x0,x1) => x0.decorationStyle = x1,
_824: (x0,x1) => x0.textBaseline = x1,
_825: (x0,x1) => x0.fontSize = x1,
_826: (x0,x1) => x0.letterSpacing = x1,
_827: (x0,x1) => x0.wordSpacing = x1,
_828: (x0,x1) => x0.heightMultiplier = x1,
_829: (x0,x1) => x0.halfLeading = x1,
_831: (x0,x1) => x0.fontFamilies = x1,
_832: (x0,x1) => x0.fontStyle = x1,
_835: (x0,x1) => x0.fontVariations = x1,
_844: (x0,x1) => x0.weight = x1,
_851: (x0,x1) => x0.axis = x1,
_852: (x0,x1) => x0.value = x1,
_853: (x0,x1) => x0.getGlyphIDs(x1),
_854: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_858: (x0,x1,x2) => x0.registerFont(x1,x2),
_875: x0 => x0.rect,
_877: x0 => x0.dir,
_879: x0 => x0.getAlphabeticBaseline(),
_880: x0 => x0.didExceedMaxLines(),
_881: x0 => x0.getHeight(),
_882: x0 => x0.getIdeographicBaseline(),
_885: x0 => x0.getLongestLine(),
_886: x0 => x0.getMaxIntrinsicWidth(),
_887: x0 => x0.getMinIntrinsicWidth(),
_888: x0 => x0.getMaxWidth(),
_889: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_891: x0 => x0.getRectsForPlaceholders(),
_892: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_894: (x0,x1) => x0.layout(x1),
_896: x0 => x0.affinity,
_897: x0 => x0.pos,
_902: x0 => x0.ambient,
_903: x0 => x0.spot,
_908: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_910: x0 => x0.isDeleted(),
_934: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_935: (x0,x1) => x0.makeShader(x1),
_936: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_937: x0 => x0.remove(),
_938: x0 => x0.remove(),
_939: (x0,x1) => x0.appendChild(x1),
_942: () => globalThis.window.flutterConfiguration,
_943: x0 => x0.assetBase,
_944: x0 => x0.canvasKitBaseUrl,
_945: x0 => x0.canvasKitVariant,
_946: x0 => x0.canvasKitForceCpuOnly,
_947: x0 => x0.canvasKitMaximumSurfaces,
_948: x0 => x0.debugShowSemanticsNodes,
_949: x0 => x0.hostElement,
_950: x0 => x0.nonce,
_952: x0 => x0.useColorEmoji,
_956: x0 => x0.console,
_957: x0 => x0.devicePixelRatio,
_958: x0 => x0.document,
_959: x0 => x0.history,
_960: x0 => x0.innerHeight,
_961: x0 => x0.innerWidth,
_962: x0 => x0.location,
_963: x0 => x0.navigator,
_964: x0 => x0.visualViewport,
_965: x0 => x0.performance,
_966: (x0,x1) => x0.fetch(x1),
_969: (x0,x1) => x0.dispatchEvent(x1),
_970: (x0,x1) => x0.matchMedia(x1),
_971: (x0,x1) => x0.getComputedStyle(x1),
_973: x0 => x0.screen,
_974: (x0,x1) => x0.requestAnimationFrame(x1),
_975: f => finalizeWrapper(f,x0 => dartInstance.exports._975(f,x0)),
_979: x0 => x0.trustedTypes,
_980: (x0,x1) => x0.warn(x1),
_981: (x0,x1) => x0.error(x1),
_983: (x0,x1) => x0.debug(x1),
_984: () => globalThis.window,
_985: () => globalThis.Intl,
_986: () => globalThis.Symbol,
_987: x0 => x0.clipboard,
_988: x0 => x0.maxTouchPoints,
_989: x0 => x0.vendor,
_990: x0 => x0.language,
_991: x0 => x0.platform,
_992: x0 => x0.userAgent,
_993: x0 => x0.languages,
_994: x0 => x0.documentElement,
_995: (x0,x1) => x0.querySelector(x1),
_998: (x0,x1) => x0.createElement(x1),
_1001: (x0,x1) => x0.execCommand(x1),
_1005: (x0,x1) => x0.createEvent(x1),
_1009: x0 => x0.head,
_1010: x0 => x0.body,
_1011: (x0,x1) => x0.title = x1,
_1014: x0 => x0.activeElement,
_1016: () => globalThis.document,
_1018: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1019: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1020: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1021: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1023: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1025: f => finalizeWrapper(f,x0 => dartInstance.exports._1025(f,x0)),
_1026: x0 => x0.target,
_1028: x0 => x0.timeStamp,
_1029: x0 => x0.type,
_1031: x0 => x0.preventDefault(),
_1035: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1040: x0 => x0.firstChild,
_1044: (x0,x1) => x0.appendChild(x1),
_1051: (x0,x1) => x0.removeChild(x1),
_1052: x0 => x0.isConnected,
_1053: (x0,x1) => x0.textContent = x1,
_1055: (x0,x1) => x0.contains(x1),
_1062: x0 => x0.clientHeight,
_1063: x0 => x0.clientWidth,
_1064: x0 => x0.id,
_1065: (x0,x1) => x0.id = x1,
_1068: (x0,x1) => x0.spellcheck = x1,
_1069: x0 => x0.tagName,
_1070: x0 => x0.style,
_1072: (x0,x1) => x0.append(x1),
_1073: (x0,x1) => x0.getAttribute(x1),
_1074: x0 => x0.getBoundingClientRect(),
_1080: (x0,x1) => x0.querySelectorAll(x1),
_1081: x0 => x0.remove(),
_1083: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1085: (x0,x1) => x0.removeAttribute(x1),
_1086: (x0,x1) => x0.tabIndex = x1,
_1089: x0 => x0.scrollTop,
_1090: (x0,x1) => x0.scrollTop = x1,
_1091: x0 => x0.scrollLeft,
_1092: (x0,x1) => x0.scrollLeft = x1,
_1093: x0 => x0.classList,
_1094: (x0,x1) => x0.className = x1,
_1101: (x0,x1) => x0.getElementsByClassName(x1),
_1103: x0 => x0.click(),
_1106: (x0,x1) => x0.attachShadow(x1),
_1108: (x0,x1) => x0.getPropertyValue(x1),
_1110: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1112: (x0,x1) => x0.removeProperty(x1),
_1114: x0 => x0.offsetLeft,
_1115: x0 => x0.offsetTop,
_1116: x0 => x0.offsetParent,
_1118: (x0,x1) => x0.name = x1,
_1119: x0 => x0.content,
_1120: (x0,x1) => x0.content = x1,
_1131: (x0,x1) => x0.src = x1,
_1132: (x0,x1) => x0.nonce = x1,
_1134: (x0,x1) => x0.nonce = x1,
_1136: x0 => x0.sheet,
_1140: x0 => x0.now(),
_1142: (x0,x1) => x0.width = x1,
_1144: (x0,x1) => x0.height = x1,
_1147: (x0,x1) => x0.getContext(x1),
_1150: (x0,x1) => x0.getParameter(x1),
_1151: x0 => x0.SAMPLES,
_1152: x0 => x0.STENCIL_BITS,
_1227: x0 => x0.status,
_1229: x0 => x0.body,
_1230: x0 => x0.arrayBuffer(),
_1237: x0 => x0.read(),
_1238: x0 => x0.value,
_1239: x0 => x0.done,
_1242: x0 => x0.x,
_1243: x0 => x0.y,
_1244: x0 => x0.width,
_1245: x0 => x0.height,
_1246: x0 => x0.top,
_1247: x0 => x0.right,
_1248: x0 => x0.bottom,
_1249: x0 => x0.left,
_1259: x0 => x0.height,
_1260: x0 => x0.width,
_1261: (x0,x1) => x0.value = x1,
_1263: (x0,x1) => x0.placeholder = x1,
_1264: (x0,x1) => x0.name = x1,
_1265: x0 => x0.selectionDirection,
_1266: x0 => x0.selectionStart,
_1267: x0 => x0.selectionEnd,
_1270: x0 => x0.value,
_1271: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1275: x0 => x0.readText(),
_1276: (x0,x1) => x0.writeText(x1),
_1277: x0 => x0.altKey,
_1278: x0 => x0.code,
_1279: x0 => x0.ctrlKey,
_1280: x0 => x0.key,
_1281: x0 => x0.keyCode,
_1282: x0 => x0.location,
_1283: x0 => x0.metaKey,
_1284: x0 => x0.repeat,
_1285: x0 => x0.shiftKey,
_1286: x0 => x0.isComposing,
_1287: (x0,x1) => x0.getModifierState(x1),
_1288: x0 => x0.state,
_1290: (x0,x1) => x0.go(x1),
_1291: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1292: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1293: x0 => x0.pathname,
_1294: x0 => x0.search,
_1295: x0 => x0.hash,
_1298: x0 => x0.state,
_1303: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1303(f,x0,x1)),
_1305: (x0,x1,x2) => x0.observe(x1,x2),
_1308: x0 => x0.attributeName,
_1309: x0 => x0.type,
_1310: x0 => x0.matches,
_1314: x0 => x0.matches,
_1315: x0 => x0.clientX,
_1316: x0 => x0.clientY,
_1317: x0 => x0.offsetX,
_1318: x0 => x0.offsetY,
_1321: x0 => x0.button,
_1322: x0 => x0.buttons,
_1323: x0 => x0.ctrlKey,
_1324: (x0,x1) => x0.getModifierState(x1),
_1325: x0 => x0.pointerId,
_1326: x0 => x0.pointerType,
_1327: x0 => x0.pressure,
_1328: x0 => x0.tiltX,
_1329: x0 => x0.tiltY,
_1330: x0 => x0.getCoalescedEvents(),
_1331: x0 => x0.deltaX,
_1332: x0 => x0.deltaY,
_1333: x0 => x0.wheelDeltaX,
_1334: x0 => x0.wheelDeltaY,
_1335: x0 => x0.deltaMode,
_1336: x0 => x0.altKey,
_1337: x0 => x0.ctrlKey,
_1338: x0 => x0.metaKey,
_1339: x0 => x0.shiftKey,
_1340: x0 => x0.changedTouches,
_1341: x0 => x0.identifier,
_1342: x0 => x0.clientX,
_1343: x0 => x0.clientY,
_1344: x0 => x0.data,
_1345: (x0,x1) => x0.type = x1,
_1346: (x0,x1) => x0.max = x1,
_1347: (x0,x1) => x0.min = x1,
_1348: (x0,x1) => x0.value = x1,
_1349: x0 => x0.value,
_1350: x0 => x0.disabled,
_1351: (x0,x1) => x0.disabled = x1,
_1352: (x0,x1) => x0.placeholder = x1,
_1353: (x0,x1) => x0.name = x1,
_1354: (x0,x1) => x0.autocomplete = x1,
_1355: x0 => x0.selectionDirection,
_1356: x0 => x0.selectionStart,
_1357: x0 => x0.selectionEnd,
_1361: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1368: (x0,x1) => x0.add(x1),
_1372: (x0,x1) => x0.noValidate = x1,
_1373: (x0,x1) => x0.method = x1,
_1374: (x0,x1) => x0.action = x1,
_1392: x0 => x0.cssRules,
_1394: (x0,x1,x2) => x0.insertRule(x1,x2),
_1396: x0 => x0.orientation,
_1397: x0 => x0.width,
_1398: x0 => x0.height,
_1399: (x0,x1) => x0.lock(x1),
_1413: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1413(f,x0,x1)),
_1417: x0 => x0.contentRect,
_1419: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1420: (x0,x1) => x0.createScriptURL(x1),
_1422: x0 => x0.length,
_1423: (x0,x1) => x0.item(x1),
_1424: x0 => x0.length,
_1425: (x0,x1) => x0.item(x1),
_1426: x0 => x0.iterator,
_1427: x0 => x0.Segmenter,
_1428: x0 => x0.v8BreakIterator,
_1429: (x0,x1) => x0.segment(x1),
_1431: x0 => x0.done,
_1432: x0 => x0.value,
_1433: x0 => x0.index,
_1437: (x0,x1) => x0.adoptText(x1),
_1438: x0 => x0.first(),
_1439: x0 => x0.next(),
_1440: x0 => x0.current(),
_1443: () => globalThis.window.FinalizationRegistry,
_1444: (x0,x1,x2) => x0.register(x1,x2),
_1448: x0 => x0.loader,
_1449: () => globalThis._flutter,
_1450: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1451: (x0,x1,x2) => x0.call(x1,x2),
_1452: () => globalThis.Promise,
_1453: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1453(f,x0,x1)),
_1520: f => finalizeWrapper(f,x0 => dartInstance.exports._1520(f,x0)),
_1521: f => finalizeWrapper(f,x0 => dartInstance.exports._1521(f,x0)),
_1553: (x0,x1) => x0.matchMedia(x1),
_12071: x0 => x0.matches,
_3085: () => globalThis.window,
_3166: x0 => x0.navigator,
_3655: x0 => x0.platform
      };

    const baseImports = {
        dart2wasm: dart2wasm,
        Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

